/* src/pages/WhatWeDo.css */

/* Reuse your site-level variables (you can also import variables via :root if defined globally) */
:root{
  --purple: #7B2CFF;
  --white: #ffffff;
  --black-bg: #0b0b0b;
  --card-bg: #151515;
  --overlay-alpha: 0.6; /* 60% visual darkness */
  --overlay-hover: 0.95; /* 95% opacity on hover */
  --gold: #f7ca68;
  --orange-glow: #FF7A00;
}

.what-page {
  background: var(--black-bg);
  color: var(--white);
  min-height: 100vh;
  padding-bottom: 60px;
  font-family: "Roboto", sans-serif;
}

/* Header/title */
.what-header {
  padding: 48px 20px 12px;
  text-align: center;
}

.what-title {
  font-family: "Calistoga", sans-serif;
  font-size: 36px;
  margin: 0;
  letter-spacing: 0.5px;
}

/* Services grid section */
.services-grid-section {
  padding: 20px;
  max-width: 1200px;
  margin: 0 auto;
}

.services-grid {
  display: grid;
  gap: 20px;
  /* 2 columns on wide screens, fall back automatically */
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
}

/* Card */
.service-card {
  position: relative;
  border-radius: 10px;
  overflow: hidden;
  background: var(--card-bg);
  box-shadow: 0 4px 18px rgba(0,0,0,0.6);
  transition: transform 240ms ease, box-shadow 240ms ease;
}

/* Make the whole card clickable: link fills card using pseudo-element trick */
.card-link {
  display: block;
  width: 100%;
  height: 100%;
  position: relative;
  color: inherit;
  text-decoration: none;
}

/* pseudo-element trick for accessibility/click area (inclusive-components) */
.card-link::after {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 1; /* overlay above image but below the textual .card-title */
}

/* Card media: image + overlay + title */
.card-media {
  position: relative;
  height: 260px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Image fills container */
.card-media img {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transform-origin: center center;
  transition: transform 300ms ease, filter 300ms ease, opacity 300ms ease;
  opacity: 1;
}

/* overlay layer (semi-transparent dark overlay to darken image) */
.card-overlay {
  position: absolute;
  inset: 0;
  background: rgba(0,0,0,var(--overlay-alpha)); /* 60% darkness */
  transition: background 250ms ease;
  z-index: 2;
}

/* title shown above overlay */
.card-title {
  position: relative;
  z-index: 3;
  color: var(--white);
  font-size: 1.3rem;
  font-weight: 700;
  text-align: center;
  padding: 10px 16px;
  border-radius: 6px;
  letter-spacing: 0.4px;
  text-shadow: 0 2px 6px rgba(0,0,0,0.6);
}

/* hover / focus interactions: scale + shadow + overlay reduce to show image (we increase image alpha to 95%) */
.service-card:hover,
.service-card:focus-within {
  transform: translateY(-6px) scale(1.01);
  box-shadow: 0 10px 30px rgba(0,0,0,0.7);
}

.service-card:hover .card-overlay,
.service-card:focus-within .card-overlay {
  background: rgba(0,0,0,0.05); /* almost transparent, visual effect to reveal image */
}

.service-card:hover img,
.service-card:focus-within img {
  transform: scale(1.03);
  opacity: 0.95; /* reveal to ~95% on hover as requested */
}

/* Focus styles for keyboard users */
.card-link:focus-visible {
  outline: 3px solid var(--orange-glow);
  outline-offset: 4px;
}

/* Small caption style (if needed below each card) */
.service-card .card-caption {
  padding: 14px;
  font-size: 0.95rem;
  color: #dcdcdc;
}

/* Description section (long paragraph) */
.services-description {
  max-width: 1000px;
  margin: 30px auto;
  padding: 0 20px 40px;
  line-height: 1.65;
  color: #e8e6ea;
}

.desc-inner p {
  margin: 0 0 12px 0;
  text-align: justify;
}

/* Responsive tweaks */
@media (max-width: 900px) {
  .card-media { height: 200px; }
  .what-title { font-size: 32px; }
}

@media (max-width: 560px) {
  .card-media { height: 180px; }
  .what-title { font-size: 28px; }
  .services-description { padding: 0 12px; }
}

/* Utility: visually-hidden for screen readers if needed */
.vh {
  position: absolute !important;
  height: 1px; width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}
